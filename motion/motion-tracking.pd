#N canvas 475 101 786 557 10;
#X obj 140 80 gemhead;
#X obj 135 241 pix_diff;
#X obj 25 437 pix_texture;
#X obj 24 482 rectangle 4 3;
#X obj 140 198 pix_separator;
#X obj 229 198 pix_separator;
#X obj 140 134 pix_grey;
#X obj 140 109 pix_video;
#X obj 24 459 translateXYZ 0 0 -0.1;
#X obj 229 230 pix_delay 1;
#X text 28 12 This is an example of simple video tracking using the
difference between the current frame and the previous frame \, then
using blob detection.;
#X text 356 108 <-- get the video camera;
#X text 356 133 <-- convert to grey for easier tracking;
#X text 356 196 <-- make two copies of the frame;
#X obj 140 165 trigger anything anything;
#X text 356 229 <-- delay one copy by one frame;
#X text 356 305 <-- set the threshold to filter out;
#X text 381 281 difference between the two frames;
#X text 356 270 <-- find the absolute value of the;
#X text 381 316 small changes;
#X text 356 344 <-- track the (x \, y) coordinates and size;
#X text 380 357 of the "blob" of the difference;
#X text 356 384 <-- render a cursor using the (x \, y) and size;
#X text 29 502 render the video of the;
#X text 38 519 frame difference;
#N canvas 340 107 682 322 gemwin 0;
#X obj 102 122 tgl 15 0 \$0-gemstart \$0-gemstart empty 17 7 0 10 -262144
-1 -1 1 1;
#X obj 102 161 r \$0-gemstart;
#X obj 102 182 select 1 0;
#X msg 102 214 create \, 1;
#X msg 177 215 destroy;
#X obj 102 239 t a;
#X obj 318 54 inlet;
#X obj 318 255 gemwin;
#X obj 318 100 t a a;
#X obj 318 287 outlet;
#X obj 350 128 route create destroy;
#X obj 350 150 t b;
#X msg 350 172 1;
#X obj 390 150 t b;
#X msg 390 172 0;
#X obj 350 195 t f;
#X msg 350 219 set \$1;
#X text 118 122 rendering;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 0 5 0;
#X connect 4 0 5 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 8 1 10 0;
#X connect 10 0 11 0;
#X connect 10 1 13 0;
#X connect 11 0 12 0;
#X connect 12 0 15 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 0 0;
#X coords 0 -1 1 1 85 40 1 100 100;
#X restore 535 13 pd gemwin;
#X obj 118 314 pix_rgba;
#X obj 117 380 pix_duotone;
#X msg 242 353 1 1 1;
#X msg 258 379 0 0 0;
#N canvas 315 69 685 594 histogram 1;
#X obj 594 7 inlet;
#X obj 444 37 pix_histo histogram;
#X msg 444 7 set histogram;
#N canvas 0 4 932 479 (subpatch) 0;
#X array histogram 2 float 3;
#A 0 1.00273 0;
#X coords 0 1 2 -1 200 140 1 0 0;
#X restore 642 32 graph;
#X obj 344 90 tabread histogram;
#X obj 444 67 t b;
#X floatatom 498 192 5 0 0 0 - - -;
#X obj 657 488 pix_mix;
#X obj 696 360 gemhead;
#N canvas 0 57 1280 627 image 0;
#X obj 77 48 inlet;
#X obj 77 344 outlet;
#X obj 77 205 pix_image examples/data/dancer.JPG;
#X obj 223 55 inlet;
#X msg 223 123 open \$1;
#X obj 223 100 openpanel;
#X obj 77 281 pix_buf;
#X msg 103 257 auto 1;
#X obj 103 236 loadbang;
#X text 156 263 [pix_buf] with auto 1 is important if we want to recalculate
our pix-effect each frame but don't want to reload the image all the
time.;
#X connect 0 0 2 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 1 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X restore 698 383 pd image;
#X obj 757 356 bng 15 250 50 0 empty empty pix_load 20 8 0 8 -262144
-1 -1;
#X obj 657 555 outlet;
#X obj 344 151 expr $f1 \; if ($f1 > 0.01 \, $f2 \, $f3) \;;
#X obj 695 455 pix_resize;
#X obj 609 457 pix_resize;
#X msg 521 130 1;
#X msg 509 427 dimen 320 240;
#X msg 703 433 dimen 320 240;
#X msg 433 129 0;
#X msg 344 60 1;
#N canvas -2 4 450 300 high 0;
#X obj 136 88 inlet;
#X obj 141 143 sel 1;
#X floatatom 206 147 5 0 0 0 - - -;
#X obj 206 169 sel 1;
#X obj 205 196 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 205 227 outlet;
#X connect 0 0 1 0;
#X connect 1 1 2 0;
#X connect 2 0 1 1;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X restore 464 251 pd high;
#X obj 460 300 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 222 221 loadbang;
#X msg 222 242 1;
#X obj 223 302 int;
#X obj 259 302 + 1;
#X floatatom 228 348 5 0 0 0 - - -;
#X msg 305 270 0;
#X obj 222 263 metro 500;
#X obj 237 376 sel 5;
#X floatatom 380 442 5 0 0 0 - - -;
#X floatatom 339 121 5 0 0 0 - - -;
#X obj 353 245 sel 0;
#X text 431 113 movement;
#X text 515 114 still;
#X text 203 200 watchdog;
#X msg 414 413 0;
#X msg 309 416 1;
#X connect 0 0 1 0;
#X connect 0 0 14 0;
#X connect 1 0 5 0;
#X connect 2 0 1 0;
#X connect 4 0 31 0;
#X connect 5 0 12 0;
#X connect 5 0 19 0;
#X connect 6 0 20 0;
#X connect 6 0 32 0;
#X connect 7 0 11 0;
#X connect 8 0 9 0;
#X connect 9 0 13 0;
#X connect 10 0 9 1;
#X connect 12 1 6 0;
#X connect 13 0 7 1;
#X connect 14 0 7 0;
#X connect 15 0 12 2;
#X connect 16 0 14 0;
#X connect 17 0 13 0;
#X connect 18 0 12 1;
#X connect 19 0 4 0;
#X connect 20 0 21 0;
#X connect 22 0 23 0;
#X connect 23 0 28 0;
#X connect 24 0 25 0;
#X connect 24 0 26 0;
#X connect 25 0 24 1;
#X connect 26 0 29 0;
#X connect 27 0 24 0;
#X connect 28 0 24 0;
#X connect 29 0 27 0;
#X connect 29 0 37 0;
#X connect 30 0 7 2;
#X connect 31 0 12 0;
#X connect 32 0 27 0;
#X connect 32 0 36 0;
#X connect 36 0 30 0;
#X connect 37 0 30 0;
#X restore 80 407 pd histogram;
#X msg 184 322 0.05 0.05 0.05;
#X connect 0 0 7 0;
#X connect 1 0 26 0;
#X connect 2 0 8 0;
#X connect 4 0 1 0;
#X connect 5 0 9 0;
#X connect 6 0 14 0;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 9 0 1 1;
#X connect 14 0 5 0;
#X connect 14 1 4 0;
#X connect 26 0 27 0;
#X connect 27 0 30 0;
#X connect 28 0 27 2;
#X connect 29 0 27 3;
#X connect 30 0 2 0;
#X connect 31 0 27 1;
